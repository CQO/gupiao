<template lang="pug">
.home
  .search-bar
    .my-code 
    input(type="text" o-value="this.data.searchText" placeholder="股票代码")
    .button(o-tap="add") 添加
  .show-box
  .conn
    table.pure-table
  .tool-box
    .button(o-tap="addAll") 全部加仓
    .button(o-tap="clearAll") 全部清仓
    .button(o-tap="clear10") 全部减仓10%
    .button(o-tap="clearLog") 清理日志
  .log-box
</template>

<script>
  var appType = 'gupiao'
  module.exports = {
    data: {
      searchText: 'sh600017',
      userInfo: {
        allNumber: 100000000,
        like: [],
        data: {},
        buyInfo: {},
        log: ''
      }
    },
    created: function () {
      fetch(`http://going.run/userServer?route=loginSession`, {
        method: 'POST',
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          type: 'gupiao',
          username: 'test',
          session: 'mEvdZ4n4rWfHsROk'
        })
      }).then((response) => {return response.json();}).then((res) => {
        console.log(res)
        if (res.err === 0) {
          owo.tool.toast('登陆成功')
          owo.state.userInfo = res.data
          localStorage.setItem('owoUserInfo_' + appType, JSON.stringify(res.data))
          owo.script.page.data.userInfo = JSON.parse(owo.state.userInfo.data)
          console.log(owo.script.page.data.userInfo)
          setTimeout(() => {
            owo.script.page.creatTable()
          }, 0);
          
          
        } else {
          owo.go('login')
          owo.tool.toast(res.message)
        }
      })
      setTimeout(() => {
        this.updata()
      }, 1000);
    },
    creatTable: function () {
      if (!this.data.userInfo.buyInfo) {
        this.data.userInfo.buyInfo = {}
      }
      if (!this.data.userInfo.like || this.data.userInfo.like.length == 0) {
        return
      }
      this.query('.my-code').innerText = '我的资金:' + this.data.userInfo.allNumber + '元'
      let newHtml = `<tr>
      <th>编号</th>
      <th>股票代码</th>
      <th>当前价格</th>
      <th>低吸%</th>
      <th>高抛%</th>
      <th>振幅%</th>
      <th>累计盈亏</th>
      <th>预买价</th>
      <th>预卖价</th>
      <th>低吸次数</th>
      <th>高抛次数</th>
      <th>其他操作</th>
      </tr>`
      const gupiaoData = this.data.userInfo.data
      let ind = 0
      this.data.userInfo.like.forEach(element => {
        ind++
        const item = gupiaoData[element]
        let buyInfo = this.data.userInfo.buyInfo[element]
        if (!buyInfo) {
          buyInfo = {
            num: 0,
            in: 0,
            out: 0
          }
        }
        buyInfo.setNum = buyInfo.setNum || 0
        buyInfo.setNum2 = buyInfo.setNum2 || 0
        buyInfo.setNumTime = buyInfo.setNumTime || 0
        buyInfo.setNum2Time = buyInfo.setNum2Time || 0
        newHtml += `<tr>
          <td>${ind}</td>
          <td>${element}</td>
          <td>${item[2]}</td>
          <td><input type="number" o-input="changeM(${item[1]})" value="${buyInfo.setNum}"></td>
          <td><input type="number" o-input="changeM2(${item[1]})" value="${buyInfo.setNum2}"></td>
          <td>${item[41]}%</td>
          <td>${((item[2] - buyInfo.in) * buyInfo.num).toFixed(2)}元</td>
          <td>${(buyInfo.in * (100 - buyInfo.setNum) / 100).toFixed(2)}元</td>
          <td>${(buyInfo.in * (100 + buyInfo.setNum2) / 100).toFixed(2)}元</td>
          <td>${buyInfo.setNumTime}</td>
          <td>${buyInfo.setNum2Time}</td>
          <td><span o-tap="delateKey('${element}')">删除</span></td>
          </tr>`
      })
      // console.log(this)
      this.query('table').innerHTML = newHtml
      this.query('.log-box').innerHTML = this.data.userInfo.log
      setTimeout(() => {
        this.handleEvent(this, this.query('tbody'))
      }, 100);
    },
    add: function () {
      var requestOptions = {
        method: 'POST',
        body: JSON.stringify([this.data.searchText]),
        redirect: 'follow'
      };
      fetch("https://going.run/gupiao?route=query", requestOptions)
        .then(response => response.json())
        .then((result) => {
          // console.log(result)
          if (result.err == 0) {
            if (result.num > 0) {
              for (const key in result.data) {
                if (result.data.hasOwnProperty.call(result.data, key)) {
                  const element = result.data[key];
                  this.data.userInfo.like.push('sh' + key)
                  this.data.userInfo.data['sh' + key] = element
                  this.jiacang('sh' + key)
                }
              }
              
              this.creatTable()
              saveUserInfo(this.data.userInfo)
            } else {
              alert('股票代码错误!')
            }
          }
        })
        .catch(error => console.log('error', error));
    },
    changeM: function (id) {
      console.log(this.$target.value)
      this.data.userInfo.buyInfo['sh' + id].setNum = 2
      saveUserInfo(this.data.userInfo)
      setTimeout(() => {
        this.creatTable()
      }, 0);
    },
    changeM2: function (id) {
      console.log(this.$target.value)
      this.data.userInfo.buyInfo['sh' + id].setNum2 = 2
      saveUserInfo(this.data.userInfo)
      setTimeout(() => {
        this.creatTable()
      }, 0);
    },
    delateKey: function (key) {
      let newList = []
      this.data.userInfo.like.forEach(element => {
        if (element !== 'key') {
          newList.push(key)
        }
      })
      this.data.userInfo.like = []
      this.data.userInfo.data[key] = []
      owo.script.page.creatTable()
      saveUserInfo(this.data.userInfo)
    },
    updata: function () {
      if (!this.data.userInfo.like || this.data.userInfo.like.lenghth == 0) {
        setTimeout(() => {
          this.updata()
        }, 1000);
        return
      }
      
      
      var requestOptions = {
        method: 'POST',
        body: JSON.stringify(this.data.userInfo.like),
        redirect: 'follow'
      };
      fetch("https://going.run/gupiao?route=query", requestOptions)
        .then(response => response.json())
        .then((result) => {
          this.data.userInfo.like = []
          // console.log(result)
          for (const key in result.data) {
            if (result.data.hasOwnProperty.call(result.data, key)) {
              const element = result.data[key];
              this.data.userInfo.like.push('sh' + key)
              this.data.userInfo.data['sh' + key] = element
            }
          }
          this.creatTable()
          setTimeout(() => {
            this.updata()
          }, 1000);
        })
        .catch(error => console.log('error', error));
    },
    jiacang: function (key) {
      console.log(key)
      if (!this.data.userInfo.buyInfo[key]) {
        this.data.userInfo.buyInfo[key] = {
          num: 0,
          in: 0,
          out: 0
        }
      }
      this.data.userInfo.allNumber -= 50000
      let nowP = this.data.userInfo.data[key][2]
      if (this.data.userInfo.buyInfo[key].num == 0) {
        this.data.userInfo.buyInfo[key].in = nowP
      } else {
        this.data.userInfo.buyInfo[key].in = ((nowP * 50000) + (this.data.userInfo.buyInfo[key].in * this.data.userInfo.buyInfo[key].num)) / (50000 + this.data.userInfo.buyInfo[key].num)
      }
      this.data.userInfo.buyInfo[key].num += (50000 / nowP)
      
      saveUserInfo(this.data.userInfo)
    },
    qingcang: function (key, clearNumber) {
      
      if (!this.data.userInfo.buyInfo[key] || this.data.userInfo.buyInfo[key].num == 0) {
        return
      }
      let userBuyNum = this.data.userInfo.buyInfo[key].num
      clearNumber = clearNumber || userBuyNum
      this.data.userInfo.buyInfo[key].out = this.data.userInfo.data[key][2]
      console.log(this.data.userInfo.data[key][2], userBuyNum)
      this.data.userInfo.allNumber += (this.data.userInfo.data[key][2] * clearNumber)
      let inNum = this.data.userInfo.buyInfo[key].in
      let outNum = this.data.userInfo.buyInfo[key].out
      let yingkui = (outNum - inNum) * clearNumber
      this.data.userInfo.log += `${this.data.userInfo.data[key][0]} 买入价格 ${inNum} 卖出价格 ${outNum} 盈利 ${yingkui.toFixed(2)}元;<br>`
      this.data.userInfo.buyInfo[key].num = this.data.userInfo.buyInfo[key].num - clearNumber
      
      saveUserInfo(this.data.userInfo)
    },
    addAll: function () {
      console.log('全部加仓!')
      this.data.userInfo.like.forEach(element => {
        this.jiacang(element)
      });
    },
    clearAll: function () {
      console.log('全部清仓!')
      this.data.userInfo.like.forEach(element => {
        this.qingcang(element)
      });
    },
    clear10: function () {
      console.log('全部减仓10%!')
      this.data.userInfo.like.forEach(element => {
        const clearNumber = this.data.userInfo.buyInfo[element].num * 0.1
        this.qingcang(element, clearNumber)
      });
    },
    clearLog: function () {
      this.data.userInfo.log = ''
      saveUserInfo(this.data.userInfo)
      setTimeout(() => {
        owo.script.page.creatTable()
      }, 0);
    }
  }
</script>


<style lang="less">
.search-bar {
  display: flex;
  height: 35px;
  align-items: center;
  justify-content: flex-end;
  padding: 0 10px;
  background-color: ghostwhite;
  input {
    height: 25px;
    padding: 0 5px;
  }
}
.button {
  display: block;
  line-height: 28px;
  background-color: #009fe9;
  color: white;
  padding: 0 10px;
  margin: 0 10px;
  border-radius: 3px;
  cursor: pointer;
}
td {
  span {
    color: #009fe9;
    cursor: pointer;
    margin: 0 2px;
  }
}
.my-code {
  position: absolute;
  left: 0;
}
.conn {
  height: calc(100% - 450px);
}
.log-box {
  height: 353px;
  padding: 10px;
  border-top: 1px solid #ccc;
  overflow: auto;
}
.tool-box {
  display: flex;
  height: 40px;
  align-items: center;
  border-top: 1px solid #ccc;
}
table {
  width: 100%;
}
td input {
  display: block;
  width: 100%;
  height: 100%;
  border: none;
  text-align: center;
}
</style>
